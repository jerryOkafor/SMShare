[versions]
kotlin = "2.1.21"
ksp = "2.1.21-2.0.1"
annotationVersion = "1.6.11"

androidGradlePlugin = "8.10.0"
iosDeploymentVersion = "17.5"
reachability = "3.7.5"
appoloGraphql = "4.0.0"
flywaydb = "8.5.4"
expediagroupGraphqlKotlinKtorServer = "9.0.0-alpha.8"

composeMultiplatform = "1.9.0-alpha02"
navigationCompose = "2.9.0-beta02"
savedState = "1.3.0"
richeditorCompose = "1.0.0-rc05"
robolectric = "4.14.1"
uiTestJunit4Android = "1.7.6"
flexibleBottomsheetMaterial3 = "0.1.3"

# Room
room = "2.7.0-alpha12"
paging = "3.3.5"
roomKtx = "2.6.1"
datastore = "1.1.1"
sqlite = "2.5.0-alpha12"
atomicfu = "0.25.0"
okio = "3.9.0"

# Config
buildKonfig = "0.15.1"

# DI
#https://github.com/InsertKoinIO/koin/releases
koin = "4.1.0"
kermit = "2.0.3"

cryptographyProviderJdkVersion = "0.2.0"

android-compileSdk = "35"
android-minSdk = "27"
android-targetSdk = "35"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.15.0"
androidx-espresso-core = "3.6.1"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
androidxTestRunner = "1.6.2"
browser = "1.8.0"
junit = "4.13.2"
ktor = "3.1.3"
ktorSeverTestJVM = "3.0.0-beta-2"
skie = "0.6.2"
commonsCodec = "1.16.1"
logback = "1.5.13"
kotlinx-serialization-json = "1.8.0"
dateTime = "0.6.1"
coroutines = "1.10.1"
kotlinx-rpc = "0.7.0"
activityKtx = "1.10.0"
splashscreen = "1.0.1"
lifecycle = "2.9.0"
desugaJdkLibs = "2.1.4"
cacheFix = "3.0.1"
material3Android = "1.3.1"
googleTruth = "1.4.4"
archCoreTesting = "2.2.0"

# code quality
detekt = "1.23.6" # => 1.23.8
ktlint = "1.3.0" #=> 1.6.0
jacoco = "0.8.12"
lint = "31.4.0"
testParameterInjector = "1.12"
firebaseTestLab = "2.6.2"
kover = "0.9.1"
firebaseFirestoreKtx = "25.1.4"

exposed = "0.54.0"
sendgridJava = "4.4.1"
postgresql = "42.2.2"
h2 = "2.3.232"
hikaricp = "2.7.8"
jbcrypt = "0.4"
composeHotReload = "1.0.0-alpha11"
kotlinxHtmlVersion = "0.12.0"

[libraries]
androidx-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "uiTestJunit4Android" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "uiTestJunit4Android" }
flexible-bottomsheet-material3 = { module = "com.github.skydoves:flexible-bottomsheet-material3", version.ref = "flexibleBottomsheetMaterial3" }
richeditor-compose = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "richeditorCompose" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
tools-desugarjdklibs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugaJdkLibs" }

# Kotlin
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }

# Android
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
#androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidxTestRunner" }
#androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
#androidx-test-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "androidx-test-junit" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso-core" }
#androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
#androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
#androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewModel" }

# Google
google-android-material = { module = "com.google.android.material:material", version.ref = "androidx-material" }
google-truth = { module = "com.google.truth:truth", version.ref = "googleTruth" }


# compose
jetbrains-compose-material3-windowSizeClass = { module = "org.jetbrains.compose.material3:material3-window-size-class", version.ref = "composeMultiplatform" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityKtx" }

# Navigation
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
jetbrains-androidx-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
jetbrains-androidx-lifecycle-runtime-compose= { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
jetbrains-androidx-savedstate = { module = "org.jetbrains.androidx.savedstate:savedstate", version.ref = "savedState" }

# Room
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
androidx-sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
androidx-paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }
androidx-paging-compose = { group = "androidx.paging", name = "paging-compose", version.ref = "paging" }

# Datastore
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
androidx-datastore-core-okio = { module = "androidx.datastore:datastore-core-okio", version.ref = "datastore" }
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
squareup-okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# kotlinx
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
#kotlinx-coroutines-javafx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-javafx", version.ref = "coroutines" }
kotlinx-coroutines-swingx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "dateTime" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

apache-commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
skie-annotations = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie" }

# ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-cors-jvm = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-websockets-jvm = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-server-host-common-jvm = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktor" }
ktor-network-tls-certificates = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-html-builder = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }

# Kotlinx HTML
jetbrains-kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "kotlinxHtmlVersion" }
jetbrains-kotlinx-html-jvm = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinxHtmlVersion" }
jetbrains-kotlinx-html-js = { module = "org.jetbrains.kotlinx:kotlinx-html-js", version.ref = "kotlinxHtmlVersion" }

## Flyway DB
flywaydb-flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flywaydb" }

# Exposed
jetbrains-exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
jetbrains-exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
jetbrains-exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

h2database-h2 = { module = "com.h2database:h2", version.ref = "h2" }
zaxxer-hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
postgres-postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

mindrot-jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }
sendgrid-java = { module = "com.sendgrid:sendgrid-java", version.ref = "sendgridJava" }

## Graph QL
expediagroup-graphql-kotlin-ktor-server = { module = "com.expediagroup:graphql-kotlin-ktor-server", version.ref = "expediagroupGraphqlKotlinKtorServer" }

# DI
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

# kotlinx-rpc
kotlinx-rpc-core = { module = "org.jetbrains.kotlinx:kotlinx-rpc-core", version.ref = "kotlinx-rpc" }
kotlinx-rpc-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-client", version.ref = "kotlinx-rpc" }
kotlinx-rpc-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-server", version.ref = "kotlinx-rpc" }
kotlinx-rpc-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-serialization-json", version.ref = "kotlinx-rpc" }

# kotlinx-rpc ktor transport layer
kotlinx-rpc-transport-ktor-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-ktor-client", version.ref = "kotlinx-rpc" }
kotlinx-rpc-transport-ktor-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-ktor-server", version.ref = "kotlinx-rpc" }


dev-whyoleg-cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptographyProviderJdkVersion" }
dev-whyoleg-cryptography-provider-apple = { module = "dev.whyoleg.cryptography:cryptography-provider-apple", version.ref = "cryptographyProviderJdkVersion" }
dev-whyoleg-cryptography-random = { module = "dev.whyoleg.cryptography:cryptography-random", version.ref = "cryptographyProviderJdkVersion" }
dev-whyoleg-cryptography-provider-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptographyProviderJdkVersion" }

# Touchlab
co-touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

# other
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# testing
junit = { group = "junit", name = "junit", version.ref = "junit" }

# build-logic dependencies
android-gradlePlugin-api = { module = "com.android.tools.build:gradle-api", version.ref = "androidGradlePlugin" }
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-compiler-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "composeMultiplatform" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
detekt-gradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
firebase-testLab-gradlePlugin = { module = "firebase.test.lab:plugin", version.ref = "firebaseTestLab" }
kover-gradlePlugin = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
firebase-firestore-ktx = { group = "com.google.firebase", name = "firebase-firestore-ktx", version.ref = "firebaseFirestoreKtx" }
powerAssert-gradlePlugin = { module = "org.jetbrains.kotlin.plugin.power-assert:org.jetbrains.kotlin.plugin.power-assert.gradle.plugin", version.ref = "kotlin" }

[bundles]
#apollo = ["apollo-normalized-cache-in-memory", "apollo-adapters"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" }
cacheFix = { id = "org.gradle.android.cache-fix", version.ref = "cacheFix" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-powerAssert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
kotlinx-rpc = { id = "org.jetbrains.kotlinx.rpc.plugin", version.ref = "kotlinx-rpc" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
androidx-room = { id = "androidx.room", version.ref = "room" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
io-gitlab-arturbosch-detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
appoloGraphql = { id = "com.apollographql.apollo", version.ref = "appoloGraphql" }
flywaydb = { id = "org.flywaydb.flyway", version.ref = "flywaydb" }
expediagroup-graphql = { id = "com.expediagroup.graphql", version.ref = "expediagroupGraphqlKotlinKtorServer" }

jetbrains-compose-hotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }

# Plugins defined by this project
smshare-android-application = { id = "com.jerryokafor.smshare.android.application", version = "unspecified" }
smshare-android-library = { id = "com.jerryokafor.smshare.android.library", version = "unspecified" }
smshare-kotlin-multiplatform = { id = "com.jerryokafor.smshare.multiplatform", version = "unspecified" }
smshare-firebase-testLab = { id = "com.jerryokafor.smshare.firebase.testLab", version = "unspecified" }
smshare-detekt = { id = "com.jerryokafor.smshare.detekt", version = "unspecified" }
smshare-ktlint = { id = "com.jerryokafor.smshare.ktlint", version = "unspecified" }
