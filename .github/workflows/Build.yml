name: Build SMS Share

on:
  push:
    branches:
      - main
    paths-ignore:
      - "Readme.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "Readme.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  verify_code_quality:
    name: Verify Code Quality
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decrypt large secret
        shell: bash
        run: |
          ./scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Kotlin/Native compile(Konan) Cache
        if: always()
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/caches
            ~/.konan/dependencies
            ~/.konan/kotlin-native-prebuilt-macos-*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/Dependencies.kt') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Verify Code Quality
        run: ./gradlew detekt ktlintCheck

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs:
      - verify_code_quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decrypt large secret
        shell: bash
        run: |
          ./scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Kotlin/Native compile(Konan) Cache
        if: always()
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/caches
            ~/.konan/dependencies
            ~/.konan/kotlin-native-prebuilt-macos-*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/Dependencies.kt') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Install Dependencies
        run: |
          cd iosApp
          pod install --repo-update
        shell: bash

      - name: Build iOS app
        run: |
          xcodebuild \
          -workspace iosApp/iosApp.xcworkspace \
          -configuration Debug \
          -scheme iosApp \
          -sdk iphoneos \
          -allowProvisioningUpdates \
          -destination name='iPhone 14' build

  #      - name: Run iOS unit tests
  #        run: |
  #          xcodebuild \
  #          -workspace iosApp/iosApp.xcworkspace \
  #          -configuration Debug \
  #          -scheme iosApp -sdk iphoneos \
  #          -destination name='iPhone 14' test \
  #          -allowProvisioningUpdates \
  #          -test-timeouts-enabled YES

  build-android:
    runs-on: macos-latest
    name: Build Android
    needs:
      - verify_code_quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decrypt large secret
        shell: bash
        run: |
          ./scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Kotlin/Native compile(Konan) Cache
        if: always()
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/caches
            ~/.konan/dependencies
            ~/.konan/kotlin-native-prebuilt-macos-*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/Dependencies.kt') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Build
        run: ./gradlew :composeApp:assembleDebug

  #      - name: Test Android
  #        run: ./gradlew clean testDebugUnitTest -p composeApp/

  test-android:
    name: Test Android UI
    runs-on: macos-latest
    needs:
      - build-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decrypt large secret
        shell: bash
        run: |
          ./scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Kotlin/Native compile(Konan) Cache
        if: always()
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/caches
            ~/.konan/dependencies
            ~/.konan/kotlin-native-prebuilt-macos-*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/Dependencies.kt') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Build Android Test APK
        run: ./gradlew assembleAndroidTest

      - name: Run Android tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: 'android-device.yml:android-pixel-4'
        env:
          SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

  build-desktop:
    name: Build Desktop
    runs-on: macos-latest
    needs:
      - verify_code_quality

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decrypt large secret
        shell: bash
        run: |
          ./scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Kotlin/Native compile(Konan) Cache
        if: always()
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/caches
            ~/.konan/dependencies
            ~/.konan/kotlin-native-prebuilt-macos-*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/Dependencies.kt') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Build
        run: ./gradlew :composeApp:desktopJar

#      - name: Test Desktop
#        run: ./gradlew clean desktopTest -p composeApp
#
#    # https://proandroiddev.com/optimising-ci-build-times-of-a-kotlin-multiplatform-project-2a430055f383